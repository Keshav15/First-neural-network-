def nonlin(x,deriv=False):
    if(deriv==True):
        return(x*(1-x))
    return(1/(1+np.exp(-x)))
    
import numpy as np
X = np.array([  [0,0,1],
[0,1,1],
[1,0,1],
[1,1,1] ])

y = np.array([[1,1,1,1]]).T    
np.random.seed(1)
we0=2*np.random.random((3,8)) -1
we1=2*np.random.random((8,1))-1



for iter in range(70000):
    l0=X
    l1=nonlin(np.dot(l0,we0))
    l2=nonlin(np.dot(l1,we1))
    l2_error=y-l2
    l2_delta=l2_error*nonlin(l2,deriv=True)
    l1_error=l2_delta.dot(we1.T)
    l1_delta=l1_error*nonlin(l1,deriv=True)
    we1 +=l1.T.dot(l2_delta)
    we0 +=l0.T.dot(l1_delta)
    
